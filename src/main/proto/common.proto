syntax = "proto3";

package com.hymnsmobile.pipeline.models;

option java_multiple_files = true;

message Hymn {
  int32 id = 1;
  repeated SongReference references = 2;
  string title = 3;
  repeated Verse lyrics = 4;
  repeated string category = 5;
  repeated string sub_category = 6;
  repeated string author = 7;
  repeated string composer = 8;
  repeated string key = 9;
  repeated string time = 10;
  repeated string meter = 11;
  repeated string scriptures = 12;
  repeated string hymn_code = 13;
  map<string, string> music = 14;
  map<string, string> svg_sheet = 15;
  map<string, string> pdf_sheet = 16;
  repeated SongReference languages = 21;
  repeated SongReference relevants = 22;
  optional string inline_chords = 19;
  repeated string provenance = 20;
  reserved 17, 18;
}

message SongReference {
  string hymn_type = 1;
  string hymn_number = 2;
}

message SongLink {
  optional string name = 1;
  SongReference reference = 2;
}

message Verse {
  string verse_type = 1;
  repeated Line lines = 2;
}

message Line {
  string line_content = 1;
  optional string transliteration = 2;
}

message PipelineErrors {
  int32 count = 1;
  repeated PipelineError errors = 2;
}

// An error encountered during processing of the pipeline.
message PipelineError {
  enum Severity {
    ERROR_SEVERITY_UNKNOWN = 0;
    // Should log error, but not the end of the world.
    WARNING = 1;
    // Blocks the hymn from ingestion but does not block the pipeline.
    ERROR = 2;
    // Blocks the entire pipeline from completion.
    FATAL = 3;
  }
  Severity severity = 1;

  enum ErrorType {
    ERROR_TYPE_UNKNOWN = 0;
    FETCH_ERROR = 1;
    PARSE_ERROR = 2;
    // Hymn type was unrecognized.
    UNRECOGNIZED_HYMN_TYPE = 3;
    // Recognized hymn type but appeared in an unexpected place.
    UNEXPECTED_HYMN_TYPE = 4;
    // Liederbuch songs should be covered by other sources already.
    LIEDERBUCH_ALREADY_COVERED = 5;
    // Encountered more meta data than expected.
    EXTRA_META_DATA = 6;
    // Exception thrown during fetch.
    FETCH_EXCEPTION = 7;
    // Hymn key unable to be parsed.
    UNPARSEABLE_HYMN_KEY = 8;
    // Hymn number unable to be parsed.
    UNPARSEABLE_HYMN_NUMBER = 9;

    PATCHER_ADD_ERROR = 101;
    PATCHER_REMOVAL_ERROR = 102;
    PATCHER_OBSOLETE_BLOCK_LIST_ITEM = 103;

    AUDITOR_DANGLING_LANGUAGE_SET = 201;
    AUDITOR_TOO_MANY_INSTANCES = 202;
    AUDITOR_INCOMPATIBLE_LANGUAGES = 203;
    AUDITOR_DANGLING_RELEVANT_SET = 204;
    AUDITOR_INCOMPATIBLE_RELEVANTS = 205;
    AUDITOR_OBSOLETE_EXCEPTION = 206;

    SANITIZER_SELF_REFERENCE = 301;
  }
  ErrorType error_type = 2;

  enum Source {
    ERROR_SOURCE_UNKNOWN = 0;
    HYMNAL_NET = 1;
    H4A = 2;
    LIEDERBUCH = 3;
    RUSSIAN = 4;
    SONGBASE = 5;
    MERGE = 6;
  }
  Source source = 3;

  repeated string messages = 4;
}
